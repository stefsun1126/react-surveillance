{"version":3,"sources":["generic.js","redux/reducer.js","redux/action-type.js","redux/store.js","redux/action.js","components/device-tree/view.jsx","components/device-tree/tree.jsx","components/device-container/device.jsx","components/basis/button.jsx","components/main-header/view.jsx","components/main-header/header.jsx","components/main-item/view.jsx","components/main-item/item.jsx","components/main-content/view.jsx","components/main-content/content.jsx","components/main-container/main.jsx","components/event-header/header.jsx","components/event-item/item.jsx","components/event-list/view.jsx","components/event-list/list.jsx","components/event-container/event.jsx","App.jsx","index.js"],"names":["addClass","origin","add","RegExp","test","hasClass","isUndefined","value","reducers","combineReducers","mainLayouts","state","itemID","className","dataID","dataName","url","isFull","scope","action","type","originClassName","newClassName","col1","col4","col9","col16","data","layouts","i","length","push","targetItem","find","x","slice","splice","eventDatas","selectedItem","store","createStore","composeWithDevTools","selectedItemID","item_info","createLayouts","info","dropImg","doubleClickMainContentItem","Tree","props","handleArrowOnClick","setState","collapsed","handleOnStart","e","id","name","dataTransfer","setData","this","nodeChildClass","arrowClass","textClass","subs","subOptions","onClick","data-id","draggable","map","sub","key","onDragStart","event","Component","connect","View","Device","datas","Button","handleOnClick","buttonClass","children","classes","root","outlined","withStyles","background","border","borderRadius","boxShadow","color","height","padding","Header","resetEventDatas","resetSelectedItem","Item","handleOnOver","preventDefault","handleOnDrop","getData","dragItemID","addEventData","img","src","alt","onDragOver","onDrop","onDoubleClick","selectedID","Content","layout","Main","eventData","List","index","Event","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.82c168ca.chunk.js","sourcesContent":["\r\n// 共用函數\r\nconst hasClass = (origin, add) => {\r\n    let reg = new RegExp(`\\\\b${add}\\\\b`)\r\n    return reg.test(origin)\r\n}\r\n\r\nexport const addClass = (origin, add) => {\r\n    if (!hasClass(origin, add)) {\r\n        return `${origin} ${add}`\r\n    }\r\n}\r\n\r\nexport const removeClass = (origin, add) => {\r\n    let reg = new RegExp(`\\\\b${add}\\\\b`)\r\n    return origin.replace(reg, \"\")\r\n\r\n}\r\n\r\n\r\nexport const isUndefined = (value) => {\r\n    if (typeof (value) == \"undefined\") {\r\n        return true\r\n    } else {\r\n        return false\r\n    }\r\n}\r\n\r\n\r\n// 共用常數\r\nexport const ON_DROP = \"拖曳釋放\"\r\n\r\nexport const ON_DOUBLE_ONCLICK = \"連續點擊兩下\"\r\n\r\n","import { combineReducers } from 'redux'\r\nimport { addClass, isUndefined } from './../generic'\r\n\r\nimport {\r\n    ADD_EVENT_DATA,\r\n    SELECTED_ITEM_ID,\r\n    CREATE_LAYOUTS,\r\n    DRAG_IMG,\r\n    DOUBLE_CLICK_MAIN_CONTENT_ITEM,\r\n    RESET_EVENT_DATAS,\r\n    RESET_SELECTED_ITEM\r\n} from './action-type'\r\n\r\n// action\r\n// {\r\n//     scope : 4,\r\n//     dataID: '',\r\n//     dataName: \r\n// }\r\n\r\nconst mainLayouts = (state = [\r\n    {\r\n        itemID: 0,\r\n        className: 'main__content__item main__content__item--col1',\r\n        dataID: '',\r\n        dataName: '',\r\n        url: '',\r\n        isFull: false,\r\n        scope: 1\r\n    }\r\n], action) => {\r\n    switch (action.type) {\r\n        //// click btn switch layout\r\n        case CREATE_LAYOUTS:\r\n            // class\r\n            const originClassName = 'main__content__item'\r\n            let newClassName = ''\r\n            const col1 = `${originClassName}--col1`\r\n            const col4 = `${originClassName}--col4`\r\n            const col9 = `${originClassName}--col9`\r\n            const col16 = `${originClassName}--col16`\r\n\r\n            switch (action.data.scope) {\r\n                case 1:\r\n                    newClassName = addClass(originClassName, col1)\r\n                    break;\r\n                case 4:\r\n                    newClassName = addClass(originClassName, col4)\r\n                    break;\r\n                case 9:\r\n                    newClassName = addClass(originClassName, col9)\r\n                    break;\r\n                case 16:\r\n                    newClassName = addClass(originClassName, col16)\r\n                    break;\r\n                case 'reset':\r\n                    return [\r\n                        {\r\n                            itemID: 0,\r\n                            className: 'main__content__item main__content__item--col1',\r\n                            dataID: '',\r\n                            dataName: '',\r\n                            url: '',\r\n                            isFull: false,\r\n                            scope: 1\r\n                        }\r\n                    ]\r\n                default:\r\n                    newClassName = addClass(originClassName, col1)\r\n                    break;\r\n            }\r\n\r\n            let layouts = []\r\n            for (let i = 0; i < action.data.scope; i++) {\r\n                if (!isUndefined(state[i]) && !isUndefined(state[i].url) && state[i].url.length > 0) {\r\n                    state[i].className = newClassName\r\n                    // wash if double click not collapse\r\n                    state[i].scope = action.data.scope\r\n                    state[i].isFull = false\r\n                    layouts.push(state[i])\r\n                } else {\r\n                    layouts.push({\r\n                        itemID: i,\r\n                        className: newClassName,\r\n                        dataID: '',\r\n                        dataName: '',\r\n                        url: '',\r\n                        isFull: false,\r\n                        scope: action.data.scope\r\n                    })\r\n                }\r\n            }\r\n            return layouts\r\n\r\n        //// drag img to main content item\r\n        case DRAG_IMG:\r\n            // changed target info\r\n            {\r\n                let targetItem = state.find(x => x.itemID === action.data.itemID * 1)\r\n                targetItem.url = action.data.url\r\n                targetItem.dataID = action.data.dataID\r\n                targetItem.dataName = action.data.dataName\r\n                // deep clone\r\n                let slice = state.slice(0, state.length)\r\n                slice.splice(targetItem.itemID, 1, targetItem)\r\n                return slice\r\n            }\r\n        //// double click main content item let target item full\r\n        case DOUBLE_CLICK_MAIN_CONTENT_ITEM:\r\n            {\r\n                // target item\r\n                let targetItem = state.find(x => x.itemID === action.data.itemID)\r\n                // blank item can not be full\r\n                if (isUndefined(targetItem.url) || targetItem.url.length === 0) {\r\n                    return state\r\n                }\r\n                targetItem.isFull = !targetItem.isFull\r\n                // class\r\n                const originClassName = 'main__content__item'\r\n                if (!targetItem.isFull) {\r\n                    let newClassName = ''\r\n                    const col1 = `${originClassName}--col1`\r\n                    const col4 = `${originClassName}--col4`\r\n                    const col9 = `${originClassName}--col9`\r\n                    const col16 = `${originClassName}--col16`\r\n                    switch (targetItem.scope) {\r\n                        case 1:\r\n                            newClassName = addClass(originClassName, col1)\r\n                            break;\r\n                        case 4:\r\n                            newClassName = addClass(originClassName, col4)\r\n                            break;\r\n                        case 9:\r\n                            newClassName = addClass(originClassName, col9)\r\n                            break;\r\n                        case 16:\r\n                            newClassName = addClass(originClassName, col16)\r\n                            break;\r\n                        default:\r\n                            newClassName = addClass(originClassName, col1)\r\n                            break;\r\n                    }\r\n                    targetItem.className = newClassName\r\n                } else {\r\n                    targetItem.className = addClass(originClassName, `${originClassName}--full`)\r\n                }\r\n\r\n                // deep clone\r\n                let slice = state.slice(0, state.length)\r\n                slice.splice(targetItem.itemID, 1, targetItem)\r\n                return slice\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst selectedItem = (state = '', action) => {\r\n    switch (action.type) {\r\n        case SELECTED_ITEM_ID:\r\n            return action.data\r\n\r\n        case RESET_SELECTED_ITEM:\r\n            return ''\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// state = {\r\n//     id: 'aa',\r\n//     name: 'AA',\r\n//     event: 'Onclick'\r\n// }\r\nconst eventDatas = (state = [], action) => {\r\n    switch (action.type) {\r\n        case ADD_EVENT_DATA:\r\n            return [...state, action.data]\r\n\r\n        case RESET_EVENT_DATAS:\r\n            return []\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\n// 可以將整個 reducer 合併一起暴露\r\n// state 的結構\r\nconst reducers = combineReducers({\r\n    // 屬性名 : 值\r\n    mainLayouts,\r\n    eventDatas,\r\n    selectedItem\r\n})\r\n\r\n\r\nexport default reducers\r\n\r\n\r\n","\r\nexport const ADD_EVENT_DATA = 'addEventData'\r\n\r\nexport const RESET_EVENT_DATAS = 'resetEventDatas'\r\n\r\nexport const SELECTED_ITEM_ID = 'selectedItemID'\r\n\r\nexport const RESET_SELECTED_ITEM = 'resetSelectedItem'\r\n\r\nexport const CREATE_LAYOUTS = 'createLayouts'\r\n\r\nexport const DRAG_IMG = 'dragImg'\r\n\r\nexport const DOUBLE_CLICK_MAIN_CONTENT_ITEM = 'doubleClickMainContentItem'","import { createStore } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nimport reducers from './reducer'\r\n\r\nlet store = createStore(\r\n    reducers,\r\n    composeWithDevTools()\r\n)\r\n\r\nexport default store","import {\r\n    ADD_EVENT_DATA,\r\n    SELECTED_ITEM_ID,\r\n    CREATE_LAYOUTS,\r\n    DRAG_IMG,\r\n    DOUBLE_CLICK_MAIN_CONTENT_ITEM,\r\n    RESET_EVENT_DATAS,\r\n    RESET_SELECTED_ITEM\r\n} from './action-type'\r\n\r\n// add event data\r\nexport const addEventData = (selectedID) => (\r\n    {\r\n        type: ADD_EVENT_DATA, data: selectedID\r\n    }\r\n)\r\n\r\n// reset event data\r\nexport const resetEventDatas = () => (\r\n    {\r\n        type: RESET_EVENT_DATAS\r\n    }\r\n)\r\n\r\n// reset selected item\r\nexport const resetSelectedItem = () => (\r\n    {\r\n        type: RESET_SELECTED_ITEM\r\n    }\r\n)\r\n\r\n// selected item \r\nexport const selectedItemID = (item_info) => (\r\n    {\r\n        type: SELECTED_ITEM_ID,\r\n        data: item_info\r\n    }\r\n)\r\n\r\n\r\nexport const createLayouts = (info) => (\r\n    {\r\n        type: CREATE_LAYOUTS,\r\n        data: {\r\n            scope: info.scope\r\n        }\r\n    }\r\n)\r\n\r\nexport const dropImg = (info) => (\r\n    {\r\n        type: DRAG_IMG,\r\n        data: {\r\n            url: info.url,\r\n            dataID: info.dataID,\r\n            itemID: info.itemID,\r\n            dataName: info.dataName\r\n        }\r\n    }\r\n)\r\n\r\nexport const doubleClickMainContentItem = (info) => (\r\n    {\r\n        type: DOUBLE_CLICK_MAIN_CONTENT_ITEM,\r\n        data: {\r\n            itemID: info.itemID,\r\n        }\r\n    }\r\n)\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\n\r\nimport { addClass } from './../../generic.js'\r\n\r\nexport default class Tree extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            collapsed: false\r\n        }\r\n    }\r\n\r\n    handleArrowOnClick = () => {\r\n        this.setState({ collapsed: !this.state.collapsed })\r\n    }\r\n\r\n    // when start drag\r\n    handleOnStart = (e, url, id, name) => {\r\n        e.dataTransfer.setData('url', url)\r\n        e.dataTransfer.setData('id', id)\r\n        e.dataTransfer.setData('name', name)\r\n    }\r\n\r\n    render() {\r\n        const { data, selectedItem, selectedItemID } = this.props\r\n        // origin class\r\n        let nodeChildClass = 'device__treeView__treeNode__child'\r\n        let arrowClass = \"treeNode__arrow\"\r\n        // addtional class\r\n        let nodeCollapsedClass = \"device__treeView__treeNode--collapsed\"\r\n        let arrowCollapsedClass = \"treeNode__arrow--collapsed\"\r\n\r\n        // collapsed\r\n        if (this.state.collapsed) {\r\n            nodeChildClass = addClass(nodeChildClass, nodeCollapsedClass)\r\n            arrowClass = addClass(arrowClass, arrowCollapsedClass)\r\n        }\r\n\r\n        // text class\r\n        let textClass = 'device__treeView__treeNode__text'\r\n        if (selectedItem === data.id) {\r\n            textClass = addClass(textClass, `${textClass}--selected`)\r\n        }\r\n\r\n        // sub\r\n        let subs = data.subOptions\r\n        if (subs.length > 0) {\r\n            // folder can not drag\r\n            return (\r\n                <div className=\"device__treeView__treeNode\">\r\n                    <div className={arrowClass} onClick={this.handleArrowOnClick}>▾</div>\r\n                    <span\r\n                        className={textClass}\r\n                        data-id={data.id}\r\n                        draggable=\"false\"\r\n                    >\r\n                        {data.name}\r\n                    </span>\r\n                    <div className={nodeChildClass}>\r\n                        {\r\n                            subs.map((sub) => (\r\n                                <Tree key={sub.id} data={sub} selectedItem={selectedItem} selectedItemID={selectedItemID} />\r\n                            ))\r\n                        }\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div className=\"device__treeView__treeLeaf\">\r\n                    <span\r\n                        className={textClass}\r\n                        data-id={data.id}\r\n                        draggable=\"true\"\r\n                        onClick={() => selectedItemID(data.id)}\r\n                        onDragStart={(event) => this.handleOnStart(event, data.url, data.id, data.name)}\r\n                    >\r\n                        {data.name}\r\n                    </span>\r\n                </div>\r\n            )\r\n        }\r\n\r\n    }\r\n}","import { connect } from 'react-redux'\r\nimport { selectedItemID } from './../../redux/action'\r\nimport View from './view'\r\n\r\nconst Tree = connect(\r\n    // mapStateToprops \r\n    (state) => (\r\n        {\r\n            selectedItem: state.selectedItem\r\n        }\r\n    ),\r\n    // mapDispatchToProps \r\n    {\r\n        selectedItemID\r\n    }\r\n)(View)\r\n\r\nexport default Tree","import React, { Component } from 'react'\r\n\r\nimport datas from './device.json'\r\nimport Tree from '../device-tree/tree'\r\n\r\nexport default class Device extends Component {\r\n\r\n    render() {\r\n        const { selectedItem } = this.props\r\n        return (\r\n            <div className=\"device\">\r\n                <h1 className=\"device__title\">Devices</h1>\r\n                <div className=\"device__treeView\">\r\n                    {\r\n                        datas.map((data) => (\r\n                            <Tree key={data.id} data={data} selectedItem={selectedItem} />\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nimport { addClass } from '../../generic.js'\r\nimport { withStyles } from '@material-ui/styles';\r\n\r\nconst styles = {\r\n    root: {\r\n        background: '#FF8E53',\r\n        border: 0,\r\n        borderRadius: 5,\r\n        boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n        color: 'white',\r\n        height: 30,\r\n        padding: '0 30px',\r\n    },\r\n    outlined:{\r\n        border:'1px solid white'\r\n    }\r\n};\r\n\r\nclass Button extends Component {\r\n\r\n    handleOnClick = () => {\r\n        const { onClick } = this.props\r\n\r\n        onClick()\r\n    }\r\n\r\n    render() {\r\n        // origin class name\r\n        let buttonClass = 'button'\r\n        const { className, children, classes } = this.props\r\n        // add class\r\n        if (className) {\r\n            buttonClass = addClass(buttonClass, className)\r\n        }\r\n        // add ui class\r\n        buttonClass = addClass(buttonClass, classes.root)\r\n        buttonClass = addClass(buttonClass, classes.outlined)\r\n\r\n        return (\r\n            <button className={buttonClass} onClick={this.handleOnClick}>{children}</button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Button = withStyles(styles)(Button);","import React, { Component } from 'react'\r\n\r\nimport Button from './../basis/button.jsx'\r\n\r\nexport default class Header extends Component {\r\n\r\n    handleOnClick = (scope) => {\r\n        const { createLayouts, resetEventDatas, resetSelectedItem } = this.props\r\n        // reset main item\r\n        createLayouts({ scope: scope })\r\n        if (scope === 'reset') {\r\n            // reset even liset\r\n            resetEventDatas()\r\n            // reset selected item\r\n            resetSelectedItem()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"main__header\" >\r\n                <Button className=\"button--grow\" onClick={() => this.handleOnClick(1)}>1</Button>\r\n                <Button className=\"button--grow\" onClick={() => this.handleOnClick(4)}>4</Button>\r\n                <Button className=\"button--grow\" onClick={() => this.handleOnClick(9)}>9</Button>\r\n                <Button className=\"button--grow\" onClick={() => this.handleOnClick(16)}>16</Button>\r\n                <Button className=\"button--grow\" onClick={() => this.handleOnClick('reset')}>Reset</Button>\r\n            </div>\r\n        )\r\n    }\r\n}   ","\r\nimport { connect } from 'react-redux'\r\nimport { createLayouts, resetEventDatas, resetSelectedItem, dropImg } from './../../redux/action'\r\n\r\nimport View from './view'\r\n\r\nconst Header = connect(\r\n    // mapStateToprops \r\n    () => ({}),\r\n    // mapDispatchToProps \r\n    {\r\n        createLayouts,\r\n        resetEventDatas,\r\n        resetSelectedItem,\r\n        dropImg\r\n    }\r\n)(View)\r\n\r\nexport default Header","import React, { Component } from 'react'\r\n\r\nimport { ON_DROP, isUndefined, addClass } from './../../generic.js'\r\n\r\nexport default class Item extends Component {\r\n\r\n    // when start drag\r\n    handleOnStart = (e, dataID, dataName, itemID) => {\r\n        e.dataTransfer.setData('id', dataID)\r\n        e.dataTransfer.setData('name', dataName)\r\n        e.dataTransfer.setData('dragItemID', itemID)\r\n    }\r\n\r\n    // when at target scope\r\n    handleOnOver = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    // when drop\r\n    handleOnDrop = (e, itemID) => {\r\n        const url = e.dataTransfer.getData('url')\r\n        const dataID = e.dataTransfer.getData('id')\r\n        const dataName = e.dataTransfer.getData('name')\r\n        const dragItemID = e.dataTransfer.getData('dragItemID')\r\n        const { addEventData, dropImg } = this.props\r\n\r\n        // cant not drop self \r\n        // only img drag has dragItemID\r\n        if (!isUndefined(dragItemID) && dragItemID.length > 0) {\r\n            if (itemID === dragItemID * 1) {\r\n                return\r\n            }\r\n        }\r\n\r\n        dropImg({\r\n            url: url,\r\n            dataID: dataID,\r\n            itemID: itemID,\r\n            dataName: dataName\r\n        })\r\n\r\n        if (!isUndefined(dragItemID) && dragItemID.length > 0) {\r\n            // change state info\r\n            dropImg({\r\n                url: '',\r\n                dataID: '',\r\n                itemID: dragItemID,\r\n                dataName: ''\r\n            })\r\n        }\r\n\r\n        // add even list\r\n        addEventData({\r\n            id: dataID,\r\n            name: dataName,\r\n            event: ON_DROP\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { itemID, className, url, doubleClickMainContentItem, dataID, dataName, selectedItem, selectedItemID } = this.props\r\n        let newClassName = className\r\n\r\n        if (selectedItem.length > 0 && dataID === selectedItem) {\r\n            newClassName = addClass(newClassName, 'main__content__item--selected')\r\n        }\r\n        // img\r\n        let img = ''\r\n        if (!isUndefined(url) && url.length > 0) {\r\n            img =\r\n                <img\r\n                    className=\"main__content__item__img\"\r\n                    src={url} alt=\"itemImg\"\r\n                    onDragStart={(event) => this.handleOnStart(event, dataID, dataName, itemID)}\r\n                />\r\n        }\r\n\r\n        return (\r\n            <div\r\n                itemID={itemID}\r\n                className={newClassName}\r\n                onDragOver={this.handleOnOver}\r\n                onDrop={(event) => this.handleOnDrop(event, itemID)}\r\n                onClick={() => selectedItemID(dataID)}\r\n                onDoubleClick={() => doubleClickMainContentItem({ itemID })}\r\n            >\r\n                {img}\r\n            </div>\r\n        )\r\n    }\r\n}","import { connect } from 'react-redux'\r\nimport { dropImg, doubleClickMainContentItem, addEventData, selectedItemID } from './../../redux/action'\r\nimport View from './view'\r\n\r\nconst Item = connect(\r\n    // mapStateToprops \r\n    (state) => ({\r\n        selectedItem: state.selectedItem\r\n    }),\r\n    // mapDispatchToProps \r\n    {\r\n        dropImg,\r\n        doubleClickMainContentItem,\r\n        addEventData,\r\n        selectedItemID\r\n    }\r\n)(View)\r\n\r\nexport default Item\r\n","import React, { Component } from 'react'\r\n\r\nimport Item from './../main-item/item'\r\n\r\nexport default class Content extends Component {\r\n    render() {\r\n        const { mainLayouts } = this.props\r\n\r\n        return (\r\n            <div className=\"main__content\">\r\n                {\r\n                    mainLayouts.map((layout) => (\r\n                        <Item\r\n                            className={layout.className}\r\n                            key={layout.itemID}\r\n                            itemID={layout.itemID}\r\n                            dataID={layout.dataID}\r\n                            dataName={layout.dataName}\r\n                            url={layout.url}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}","import { connect } from 'react-redux'\r\nimport { createLayouts, doubleClickMainContentItem } from './../../redux/action'\r\nimport View from './view'\r\n\r\nconst Content = connect(\r\n    // mapStateToprops \r\n    (state) => (\r\n        {\r\n            mainLayouts: state.mainLayouts,\r\n        }\r\n    ),\r\n    // mapDispatchToProps \r\n    {\r\n        createLayouts,\r\n        doubleClickMainContentItem\r\n    }\r\n)(View)\r\n\r\nexport default Content","import React, { Component } from 'react'\r\n\r\nimport Header from '../main-header/header'\r\nimport Content from '../main-content/content'\r\n\r\nexport default class Main extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <Header />\r\n                <Content />\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nexport default class Header extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"event__title\">\r\n                <h3 className=\"event__title__text\">Event List</h3>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { addClass } from './../../generic'\r\n\r\nexport default class Item extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.className = 'event__list__item'\r\n    }\r\n\r\n    // select id\r\n    handleOnClick = (id) => {\r\n        const { selectedItemID} = this.props\r\n        // 新增選取\r\n        selectedItemID(id)\r\n    }\r\n\r\n    render() {\r\n        const { eventData, selectedItem } = this.props\r\n        // class name\r\n        if (selectedItem === eventData.id) {\r\n            this.className = addClass(this.className, `${this.className}--selected`)\r\n        }else{\r\n            this.className = 'event__list__item'\r\n        }\r\n        return (\r\n            <li className={this.className} onClick={() => this.handleOnClick(eventData.id)}>\r\n                {` [id]：${eventData.id} 　[name]：${eventData.name} 　[event]： ${eventData.event}`}\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport Item from './../event-item/item.jsx'\r\n\r\nexport default class List extends Component {\r\n    render() {\r\n        const {\r\n            selectedItem,\r\n            eventDatas,\r\n            selectedItemID\r\n        } = this.props\r\n        return (\r\n            <ul className=\"event__list\">\r\n                {\r\n                    eventDatas.map((eventData, index) => (\r\n                        <Item\r\n                            key={index}\r\n                            eventData={eventData}\r\n                            selectedItem={selectedItem}\r\n                            selectedItemID={selectedItemID}\r\n                        />\r\n                    ))\r\n                }\r\n            </ul>\r\n        )\r\n    }\r\n}","import { connect } from 'react-redux'\r\nimport { selectedItemID } from './../../redux/action'\r\nimport View from './view'\r\n\r\nconst List = connect(\r\n    // mapStateToprops \r\n    (state) => (\r\n        {\r\n            eventDatas: state.eventDatas,\r\n            selectedItem: state.selectedItem\r\n        }\r\n    ),\r\n    // mapDispatchToProps \r\n    {\r\n        selectedItemID\r\n    }\r\n)(View)\r\n\r\nexport default List","import React, { Component } from 'react'\r\n\r\nimport Header from './../event-header/header'\r\nimport List from './../event-list/list'\r\n\r\nexport default class Event extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"event\">\r\n                <Header />\r\n                <List />\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\n\nimport Device from './components/device-container/device.jsx'\nimport Main from './components/main-container/main.jsx'\nimport Event from './components/event-container/event.jsx'\nimport './App.scss'\n\n\nexport default class App extends Component {\n\n    render() {\n        return (\n            <div className=\"app\">\n                <Device  />\n                <Main  />\n                <Event />\n            </div>\n        );\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport store from './redux/store'\nimport { Provider } from 'react-redux'\n\nimport App from './App.jsx';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}